.system_element_3261
=> nrel_inclusion: [*
	<= .system_element_1273: <
		.system_element_3262;
		.system_element_3263;
		.system_element_3264;
		.system_element_3265
	>;;

	.system_element_3262
	=> nrel_inclusion: [*

		.system_element_606
		=> nrel_idtf: [<p>Язык унифицированного смыслового представления знаний в памяти <i>интеллектуальных компьютерных систем</i></p>]
		(*
			<- lang_ru;;
			=> nrel_format: format_html;;
		*);
		=> nrel_idtf: [<p>Внутренний язык <i>ostis-систем</i></p>]
		(*
			<- lang_ru;;
			=> nrel_format: format_html;;
		*);
		<= .system_element_3266: .system_element_29;
		=> nrel_epigraph: [<p>Информация содержится не в самих знаках, а в конфигурации связей между ними.</p>]
		(*
			<- lang_ru;;
			=> nrel_format: format_html;;
		*);
		=> nrel_epigraph: [<p>Он вскочил на коня и поскакал во все стороны.</p>]
		(*
			<- lang_ru;;
			=> nrel_format: format_html;;
		*);
		=> .system_element_3267: [<p><b>SC-код</b></p>]
		(*
			<- lang_ru;;
			=> nrel_format: format_html;;
		*);
		<- .system_element_1561;
		=> .system_element_183: [<p>sc-текст</p>]
		(*
			<- lang_ru;;
			=> nrel_format: format_html;;
		*);
		<- .system_element_184;
		<- .system_element_185
		(*
			=> nrel_idtf: [<p>Язык, для которого не уточняется способ представления символов (синтаксически элементарных фрагментов), входящих в состав текстов этого языка, а задается только <u>алфавит*</u> этих символов, то есть семейство классов символов, считающихся синтаксически эквивалентными друг другу.</p>]
			(*
				<- lang_ru;;
				=> nrel_format: format_html;;
				=> nrel_note: [<p>Каждому абстрактному языку можно поставить в соответствие целое семейство <i>реальных языков</i>, обеспечивающих <u>изоморфное</u> реальное представление текстов указанного абстрактного языка путем уточнения способов представления (изображения, кодирования) символов, входящих в состав этих текстов, а также путем уточнения правил установления синтаксической эквивалентности этих символов. Очевидно, что во всём остальном синтаксис и денотационная семантика указанных реальных языков полностью совпадает с синтаксисом и денотационной семантикой соответствующего абстрактного языка.</p>]
				(*
					<- lang_ru;;
					=> nrel_format: format_html;;
					=> nrel_note: [<p>Для <i>SC-кода</i> как абстрактного языка необходима разработка как минимум трех синтаксически и семантически эквивалентных ему реальных языков: (1) язык кодирования текстов <i>SC-кода</i> в памяти традиционных компьютеров; (2) язык кодирования текстов <i>SC-кода</i> в семантической ассоциативной памяти; (3) <i>Ядро SCg-кода</i> --- язык, синтаксически и семантически эквивалентный <i>SC-коду</i> и обеспечивающий графическое представление текстов <i>SC-кода</i>.</p>]
					(*
						<- lang_ru;;
						=> nrel_format: format_html;;
					*);;
				*);;
			*);;
		*);
		<- .system_element_3221
		(*
			=> nrel_explanation: [<p>язык, каждый текст которого 
			<ul>
				<li> задается множеством входящих в него элементарных фрагментов (символов), которое, в свою очередь, состоит
				<ul>
					<li> из множества узлов (вершин), возможно, синтаксически разного вида
					<li> из множества связок, которые также могут принадлежать разным синтаксически выделяемым классам</li>
				<ul>
				<li> задается в общем случае несколькими отношениями инцидентности связок с компонентами этих связок (при этом указанными компонентами в общем случае могут быть не только вершины, но и другие связки)</li>
			<ul></p>]
			(*
				<- lang_ru;;
				=> nrel_format: format_html;;
			*);;
		*);
		=> nrel_idtf: [<p>Универсальный язык, обеспечивающий внутреннее представление и структуризацию <u>всех</u>(!), используемых ostis-системой в процессе своего функционирования.</p>]
		(*
			<- lang_ru;;
			=> nrel_format: format_html;;
		*);
		=> nrel_idtf: [<p>Универсальный язык, являющийся результатом унификации (уточнения) синтаксиса и денотационной семантики семантических сетей.</p>]
		(*
			<- lang_ru;;
			=> nrel_format: format_html;;
		*);
		=> nrel_explanation: [<p>Универсальность SC-кода обеспечивается и тем, что элементами текстов SC-кода могут быть знаки описываемых сущностей <u>любого</u> вида, в том числе, и  знаки связей между описываемыми сущностями и/или их знаками</p>]
		(*
			<- lang_ru;;
			=> nrel_format: format_html;;
		*);
		=> .system_element_2102: [<p>Тексты SC-кода являются графовыми структурами расширенного вида, в которых знаки описываемых связей могут соединять не только вершины (узлы) графовой структуры, но и знаки других связей.</p>]
		(*
			<- lang_ru;;
			=> nrel_format: format_html;;
		*);
		=> nrel_idtf: [<p>Базовый универсальный язык внутреннего представления знаний в памяти ostis-систем.</p>]
		(*
			<- lang_ru;;
			=> nrel_format: format_html;;
		*);
		=> nrel_idtf: [<p>Базовый внутренний язык ostis-систем.</p>]
		(*
			<- lang_ru;;
			=> nrel_format: format_html;;
		*);
		=> nrel_idtf: [<p>Максимальный внутренний язык ostis-систем, по отношению к которому все остальные (специализированные) внутренние языки являются его подъязыками (подмножествами)</p>]
		(*
			<- lang_ru;;
			=> nrel_format: format_html;;
		*);
		=> nrel_idtf: [<p>Множество всевозможных текстов SC-кода</p>]
		(*
			<- lang_ru;;
			=> nrel_format: format_html;;
		*);
		<- .system_element_1561;
		=> nrel_idtf: [<p>текст SC-кода</p>]
		(*
			<- lang_ru;;
			=> nrel_format: format_html;;
		*);
		<- .system_element_184;
		=> .system_element_6: <
			.system_element_3268;
			.system_element_3269;
			.system_element_3270;
			.system_element_3271;
			.system_element_3272;
			.system_element_3273;
			.system_element_3274;
			.system_element_3275;
			.system_element_3276;
			.system_element_3277;
			.system_element_3278
		>;;

		.system_element_606
		=> nrel_note: [<p>Следует особо подчеркнуть, что  унификация и максимально возможное упрощение  <b><i>синтаксиса</i></b> и <b><i>денотационной семантики</i></b> внутреннего языка интеллектуальных компьютерных систем прежде всего необходимы потому, что подавляющий объем <b><i>знаний</i></b>, хранимых в составе  базы знаний интеллектуальной компьютерной системы, представляют собой <b><i>метазнания</i></b>, описывающие свойства других знаний. К <i>метазнаниям</i>, в частности, следует отнести и различного вида логические высказывания и всевозможного вида программы, описания методов (навыков), обеспечивающих решение различных классов задач. Необходимо исключить зависимость формы представляемого знания от вида этого знания. Форма (структура) внутреннего представления знания любого вида должна зависеть <u>только</u>(!) от смысла этого знания. Более того, конструктивное (формальное) развитие теории интеллектуальных компьютерных систем невозможно без уточнения (унификации, стандартизации) и обеспечения семантической совместимости различных видов знаний, хранимых в базе знаний интеллектуальной компьютерной  системы.  Очевидно, что многообразие форм представления семантически эквивалентных знаний делает разработку общей теории  интеллектуальных компьютерных систем практически невозможной.</p>]
		(*
			<- lang_ru;;
			=> nrel_format: format_html;;
		*);;

		.system_element_624
		=> nrel_note: [<p>Понятие <i>SC-пространства</i> наряду с понятием <i>SC-кода</i> играет важнейшую роль для уточнения и формализации понятия смысла информационных конструкций, для унификации смыслового представления информации и для максимально возможного исключения субъективизма в трактовке понятия смысла. Смысл информационной конструкции в конечном счете определяется (1) конфигурацией смыслового представления этой конструкции и (2) и местоположением (контекстом) смыслового представления указанной информационной конструкции в рамках смыслового пространства, т.е. в рамках объединенного смыслового представления <u>всевозможных</u> информационных конструкций, либо в рамках объединенного смыслового представления информации, накопленной к заданному моменту времени некоторым индивидуальным субъектом или коллективом субъектов. Таким объединенным смысловым представлением информации, в частности, является смысловое представление глобальной базы всех знаний, накопленных человечеством к текущему моменту.</p>]
		(*
			<- lang_ru;;
			=> nrel_format: format_html;;
		*);
		=> nrel_explanation: [<p>Объединение (вместилище) <u>всевозможных</u> унифицированных семантических сетей (текстов SC-кода)</p>]
		(*
			<- lang_ru;;
			=> nrel_format: format_html;;
		*);
		=> nrel_note: [<p>При теоретико-множественном объединении текстов <i>SC-кода</i> семантически эквивалентные (синонимичные) элементы (синтаксически элементарные фрагменты) этих текстов считаются совпадающими элементами и при объединении указанных текстов склеиваются.</p>]
		(*
			<- lang_ru;;
			=> nrel_format: format_html;;
		*);
		<= .system_element_325: .system_element_606;
		=> nrel_idtf: [<p>Унифицированное смысловое пространство</p>]
		(*
			<- lang_ru;;
			=> nrel_format: format_html;;
		*);
		=> .system_element_190: [<p>Важнейшим достоинством <i>SC-пространства</i> является возможность уточнения таких понятий, как понятие аналогичности (сходства и отличия) различных описываемых внешних сущностей, аналогичности унифицированных семантических сетей (текстов <i>SC-кода</i>), понятие семантической близости описываемых сущностей (в том числе, и текстов <i>SC-кода</i>).</p>]
		(*
			<- lang_ru;;
			=> nrel_format: format_html;;
		*);;
	*]
;;

	.system_element_3263
	=> nrel_inclusion: [*

		.system_element_3279
		=> nrel_inclusion: [*

			.system_element_3279
			=> nrel_note: [<p><i>Синтаксис Ядра SC-кода</i> задается: (1) <i>Алфавитом Ядра SC-кода</i>, (2) Отношением <i>инцидентности sc-коннекторов*</i>, (3) Отношением <i>инцидентности входящих sc-дуг*</i></p>]
			(*
				<- lang_ru;;
				=> nrel_format: format_html;;
			*);
			<= .system_element_192: .system_element_3280;;

			.system_element_3280
			=> .system_element_3281: .system_element_3210
			(*
				=> nrel_idtf: [<p>элемент конструкции <i>Ядра SC-кода</i></p>];;
				=> nrel_idtf: [<p>синтаксически элементарный (атомарный) фрагмент дискретной информационной конструкции, принадлежащей <i>Ядру SC-кода</i></p>]
				(*
					<- lang_ru;;
					=> nrel_format: format_html;;
				*);;
				=> nrel_idtf: [<p>Класс элементов конструкций <i>Ядра SC-кода</i></p>]
				(*
					<- lang_ru;;
					=> nrel_format: format_html;;
				*);;
				=> nrel_idtf: [<p>Множество всех элементов всевозможных конструкций <i>Ядра SC-кода</i></p>]
				(*
					<- lang_ru;;
					=> nrel_format: format_html;;
				*);;
			*);
			=> .system_element_209: .system_element_3282;;

			.system_element_3282
			=> nrel_idtf: [<p>Множество (Семейство) всех классов синтаксически эквивалентных sc-элементов Ядра SC-кода</p>]
			(*
				<- lang_ru;;
				=> nrel_format: format_html;;
			*);
			=> nrel_idtf: [<p>класс синтаксически эквивалентных sc-элементов Ядра SC-кода</p>]
			(*
				<- lang_ru;;
				=> nrel_format: format_html;;
			*);
			=> nrel_idtf: [<p>класс синтаксически эквивалентных элементов конструкций Ядра SC-кода</p>]
			(*
				<- lang_ru;;
				=> nrel_format: format_html;;
			*);
			=> nrel_idtf: [<p>элемент Алфавита Ядра SC-кода</p>]
			(*
				<- lang_ru;;
				=> nrel_format: format_html;;
			*);
			=> nrel_idtf: [<p>синтаксический тип sc-элемента Ядра SC-кода</p>]
			(*
				<- lang_ru;;
				=> nrel_format: format_html;;
			*);
			<=> .system_element_319: {
				.system_element_3283;
				.system_element_3284;
				.system_element_3285;
				.system_element_3286
			};;

			.system_element_3210
			=> nrel_subdividing: .system_element_3282
			(*
				=> nrel_note: [<p><i>Алфавит Ядра SC-кода</i> является одним из признаков классификации sc-элементов.</p>];;
				=> nrel_note: [<p>В процессе обработки текстов <i>Ядра SC-кода</i> синтаксический тип <i>sc-элементов</i> может меняться --- <i>sc-узел</i> может трансформироваться в <i>sc-ребро</i>, <i>sc-ребро</i> --- в <i>sc-дугу</i>, <i>sc-дуга</i> общего вида --- в <i>базовую sc-дугу</i>.</p>]
				(*
					<- lang_ru;;
					=> nrel_format: format_html;;
				*);;
			*);;

			.system_element_3287
			=> nrel_idtf: [<p>класс <i>sc-элементов</i>, определяемый на основе <i>Алфавита Ядра SC-кода</i></p>]
			(*
				<- lang_ru;;
				=> nrel_format: format_html;;
			*);
			-> .system_element_2737;
			-> .system_element_3288;
			=> nrel_inclusion: .system_element_3282;;

			.system_element_3288
			=> nrel_subdividing: {
				.system_element_3285;
				.system_element_3286
			};;

			.system_element_2737
			=> nrel_subdividing: {
				.system_element_3284;
				.system_element_3285
			};;
		*];;

		.system_element_3289
		=> nrel_inclusion: [*

			.system_element_3210
			=> nrel_subdividing: {
				.system_element_3283;
				.system_element_2737
				(*
					=> nrel_subdividing: {
						.system_element_3284;
						.system_element_3288
						(*
							=> nrel_subdividing: {
								.system_element_3285;
								.system_element_3286
							};;
						*)
					};;
				*)
			};
			=> nrel_note: [<p>Все классы <i>sc-элементов</i>, входящие в состав синтаксической классификации sc-элементов являются синтаксически выделяемыми классами <i>sc-элементов</i></p>]
			(*
				<- lang_ru;;
				=> nrel_format: format_html;;
			*);;

			.system_element_3290
			=> .system_element_436: [<p>Бинарное ориентированное отношение, первым компонентом каждой ориентированной пары которого является некоторый sc-коннектор, а вторым компонентом является один из sc-элементов, соединяемых указанным sc-коннектором с некоторым другим sc-элементом, который указывается в другой паре инцидентности для этого же sc-коннектора</p>]
			(*
				<- lang_ru;;
				=> nrel_format: format_html;;
			*);;

			.system_element_3291
			=> .system_element_436: [<p>Бинарное ориентированное отношение, первым компонентом каждой ориентированной пары которого является некоторая sc-дуга, а вторым компонентом --- sc-элемент, в который указанная sc-дуга входит, т.е. sc-элемент, который является вторым компонентом, соединяемым (связываемым) указанной sc-дугой</p>]
			(*
				<- lang_ru;;
				=> nrel_format: format_html;;
			*);;

			.system_element_3280
			=> .system_element_210: .system_element_3292
			(*
				-> {
					.system_element_3293;
					.system_element_3294;
					.system_element_3295;
					.system_element_3296;
					.system_element_3297
				};;
			*);;
		*];;

		.system_element_3298
		=> nrel_inclusion: [*

			.system_element_3280
			=> .system_element_3299: .system_element_3298
			(*
				=> nrel_idtf: [<p>Описание соответствия информационных конструкций, принадлежащих <i>Ядру SC-кода</i>, и сущностей, описываемых этими конструкциями</p>]
				(*
					<- lang_ru;;
					=> nrel_format: format_html;;
				*);;
			*);;

			.system_element_3300
			-> .system_element_3282;
			-> .system_element_3301;
			-> .system_element_3302;
			-> .system_element_3303;
			-> .system_element_3304;
			-> .system_element_3305;;
		*];;

		.system_element_3306
		=> nrel_inclusion: [*

			.system_element_3210
			=> nrel_idtf: [<p>обозначение описываемой сущности</p>]
			(*
				<- lang_ru;;
				=> nrel_format: format_html;;
			*);
			=> nrel_subdividing: .system_element_3307
			(*
				<=> .system_element_319: {
					.system_element_3308
					(*
						=> nrel_subdividing: {
							.system_element_3309
							(*
								=> nrel_note: [<p>К материальным сущностям относятся физические тела, поля, биологические объекты, технические системы и многое другое.</p>]
								(*
									<- lang_ru;;
									=> nrel_format: format_html;;
								*);;
							*);
							.system_element_3310
							(*
								=> nrel_note: [<p>Примерами абстрактных терминальных сущностей являются предельно малые физические тела, точки различных пространств, числа.</p>]
								(*
									<- lang_ru;;
									=> nrel_format: format_html;;
								*);;
							*);
							.system_element_3311
							(*
								=> nrel_idtf: [<p>обозначение информационной конструкции, не являющейся конструкцией <i>SC-кода</i> и тем более <i>Ядра SC-кода</i></p>];;
								=> nrel_idtf: [<p>обозначение "инородной" для <i>SC-кода</i> информационной конструкции</p>]
								(*
									<- lang_ru;;
									=> nrel_format: format_html;;
								*);;
								=> nrel_inclusion: .system_element_3312
								(*
									=> nrel_idtf: [<p>обозначение внешней информационной конструкции, представленной в электронной форме</p>]
									(*
										<- lang_ru;;
										=> nrel_format: format_html;;
									*);;
								*);;
							*)
						};;
					*);
					.system_element_3313
					(*
						=> nrel_subdividing: {
							.system_element_3314;
							.system_element_3315;
							.system_element_3316
						};;
					*)
				};;
			*);;

			.system_element_3314
			=> nrel_subdividing: {
				.system_element_3317;
				.system_element_3318
				(*
					=> nrel_subdividing: {
						.system_element_3319;
						.system_element_3320;
						.system_element_3321
						(*
							=> nrel_inclusion: .system_element_3322
							(*
								=> nrel_subdividing: {
									.system_element_3323;
									.system_element_3324;
									.system_element_3325
								};;
							*);;
						*)
					};;
				*)
			};;

			.system_element_3210
			=> nrel_subdividing: .system_element_3326
			(*
				<=> .system_element_319: {
					.system_element_3141
					(*
						=> nrel_idtf: [<p>константный sc-элемент</p>];;
						=> nrel_idtf: [<p>обозначение конкретной (фиксированной) сущности</p>]
						(*
							<- lang_ru;;
							=> nrel_format: format_html;;
						*);;
					*);
					.system_element_3142
					(*
						=> nrel_idtf: [<p>переменный sc-элемент</p>];;
						=> nrel_idtf: [<p>обозначение произвольной сущности из некоторого множества сущностей</p>]
						(*
							<- lang_ru;;
							=> nrel_format: format_html;;
						*);;
						=> nrel_idtf: [<p>sc-элемент, имеющий (принимающий) произвольное значение из некоторого множества sc-элементов</p>]
						(*
							<- lang_ru;;
							=> nrel_format: format_html;;
						*);;
					*)
				};;
			*);
			=> nrel_subdividing: .system_element_3327
			(*
				<=> .system_element_319: {
					.system_element_3328;
					.system_element_3329
					(*
						=> nrel_idtf: [<p>обозначение нестационарной сущности, факт существования которой зависит от времени</p>];;
						=> nrel_subdividing: {
							.system_element_3330
							(*
								=> nrel_idtf: [<p>обозначение сущности, существовавшей до текущего момента времени</p>]
								(*
									<- lang_ru;;
									=> nrel_format: format_html;;
								*);;
							*);
							.system_element_3331
							(*
								=> nrel_idtf: [<p>обозначение сущности, существующей в текущий момент времени</p>]
								(*
									<- lang_ru;;
									=> nrel_format: format_html;;
								*);;
							*);
							.system_element_3332
							(*
								=> nrel_idtf: [<p>обозначение сущности, существование которой прогнозируется или планируется в будущем</p>]
								(*
									<- lang_ru;;
									=> nrel_format: format_html;;
								*);;
							*)
						};;
					*)
				};;
			*);
			=> nrel_subdividing: .system_element_3333
			(*
				<=> .system_element_319: {
					.system_element_3334
					(*
						=> nrel_idtf: [<p>sc-элемент, считающийся логически удаленным, но присутствующим в описании истории эксплуатации и эволюции базы знаний</p>]
						(*
							<- lang_ru;;
							=> nrel_format: format_html;;
						*);;
					*);
					.system_element_3335
					(*
						=> nrel_idtf: [<p>sc-элемент, входящий в состав эксплуатируемой части базы знаний</p>]
						(*
							<- lang_ru;;
							=> nrel_format: format_html;;
						*);;
					*);
					.system_element_3336
					(*
						=> nrel_idtf: [<p>sc-элемент, планируемый для включения в состав эксплуатируемой части базы знаний</p>]
						(*
							<- lang_ru;;
							=> nrel_format: format_html;;
						*);;
					*)
				};;
			*);;

			.system_element_3313
			=> nrel_idtf: [<p>обозначение множества sc-элементов</p>]
			(*
				<- lang_ru;;
				=> nrel_format: format_html;;
			*);
			=> nrel_subdividing: {
				.system_element_3337
				(*
					=> nrel_idtf: [<p>sc-переменная, обозначающая произвольное множество из некоторого семейства множеств</p>];;
					=> nrel_idtf: [<p>переменное множество</p>]
					(*
						<- lang_ru;;
						=> nrel_format: format_html;;
					*);;
				*);
				.system_element_2722
				(*
					=> nrel_idtf: [<p>конкретное (константное, фиксированное) множество sc-элементов</p>]
					(*
						<- lang_ru;;
						=> nrel_format: format_html;;
					*);;
				*)
			};;

			.system_element_2722
			=> nrel_idtf: [<p>множество sc-элементов</p>]
			(*
				<- lang_ru;;
				=> nrel_format: format_html;;
			*);
			=> nrel_subdividing: {
				.system_element_3338
				(*
					=> nrel_idtf: [<p>множество, элементами которого являются только sc-константы</p>]
					(*
						<- lang_ru;;
						=> nrel_format: format_html;;
					*);;
				*);
				.system_element_3339
				(*
					=> nrel_idtf: [<p>множество, элементами которого являются только sc-переменные</p>];;
					=> nrel_inclusion: .system_element_3142
					(*
						=> nrel_idtf: [<p>множество, элементами которого являются всевозможные sc-переменные и только они</p>];;
						=> nrel_inclusion: .system_element_3337
						(*
							=> nrel_idtf: [<p>sc-переменная, значениями которой являются всевозможные обозначения множеств и только они</p>]
							(*
								<- lang_ru;;
								=> nrel_format: format_html;;
							*);;
						*);;
					*);;
				*);
				.system_element_3340
				(*
					=> nrel_idtf: [<p>множество, в число элементов которого входят как sc-константы, так и sc-переменные</p>];;
					=> nrel_inclusion: .system_element_3313
					(*
						=> nrel_idtf: [<p>множество, элементами которого являются всевозможные <b>sc-переменные</b> и <b>sc-константы</b>, обозначающие множества и только они</p>]
						(*
							<- lang_ru;;
							=> nrel_format: format_html;;
						*);;
					*);;
				*)
			};;

			.system_element_3314
			=> nrel_idtf: [<p>обозначение связи между sc-элементами и/или обозначаемыми ими сущностями</p>]
			(*
				<- lang_ru;;
				=> nrel_format: format_html;;
			*);
			=> nrel_subdividing: {
				.system_element_3341
				(*
					=> nrel_idtf: [<p>sc-переменная, значениями которой являются обозначения связок</p>]
					(*
						<- lang_ru;;
						=> nrel_format: format_html;;
					*);;
				*);
				.system_element_3342
				(*
					=> nrel_idtf: [<p>конкретная связка sc-элементов</p>]
					(*
						<- lang_ru;;
						=> nrel_format: format_html;;
					*);;
				*)
			};
			=> nrel_inclusion: .system_element_3318
			(*
				=> nrel_idtf: [<p>обозначение связки двух sc-элементов либо одного sc-элемента с самим собой</p>];;
				=> nrel_inclusion: .system_element_3343;;
				=> nrel_idtf: [<p>конкретная sc-пара</p>]
				(*
					<- lang_ru;;
					=> nrel_format: format_html;;
				*);;
				<= nrel_inclusion: .system_element_3141;;
				=> nrel_inclusion: .system_element_2737;;
				=> nrel_inclusion: .system_element_3344
				(*
					=> nrel_inclusion: .system_element_3345
					(*
						=> nrel_subdividing: {
							.system_element_3346
							(*
								=> nrel_inclusion: .system_element_3347
								(*
									=> nrel_inclusion: .system_element_3286;;
								*);;
							*);
							.system_element_3348;
							.system_element_3349
						};;
					*);;
				*);;
			*);;

			.system_element_3315
			=> nrel_idtf: [<p>обозначение множества sc-элементов, которые в соответствующем смысле эквивалентны друг другу, т.е. имеют одинаковые свойства</p>]
			(*
				<- lang_ru;;
				=> nrel_format: format_html;;
			*);
			=> nrel_subdividing: {
				.system_element_3350
				(*
					<= nrel_inclusion: .system_element_3142;;
					<- .system_element_3141;;
				*);
				.system_element_3351
				(*
					<= nrel_inclusion: .system_element_3141;;
				*)
			};;

			.system_element_3351
			=> nrel_subdividing: {
				.system_element_3352;
				.system_element_3353
				(*
					=> nrel_subdividing: {
						.system_element_3354
						(*
							=> nrel_inclusion: .system_element_3355;;
						*);
						.system_element_3356
						(*
							=> nrel_inclusion: .system_element_439;;
						*);
						.system_element_3357
						(*
							=> nrel_inclusion: .system_element_3358
							(*
								=> nrel_idtf: [<p>специализированный язык, являющийся подъязыком SC-кода, и обеспечивающий представление всевозможных знаний в рамках соответствующей предметной области, которая, в свою очередь, специфицируется соответствующей комплексной онтологией</p>]
								(*
									<- lang_ru;;
									=> nrel_format: format_html;;
								*);;
							*);;
						*)
					};;
				*)
			};
			-> .system_element_3313
			(*
				=> nrel_inclusion: .system_element_2722;;
			*);
			-> .system_element_2722;
			-> .system_element_3314
			(*
				=> nrel_inclusion: .system_element_3342;;
			*);
			-> .system_element_3342;
			-> .system_element_3315
			(*
				=> nrel_inclusion: .system_element_3351;;
			*);
			-> .system_element_3351;
			-> .system_element_3316
			(*
				=> nrel_inclusion: .system_element_2807;;
			*);
			-> .system_element_2807;
			-> .system_element_3359
			(*
				=> nrel_inclusion: .system_element_803
				(*
					=> nrel_inclusion: .system_element_486
					(*
						=> nrel_inclusion: .system_element_3360
						(*
							=> nrel_inclusion: .system_element_2879;;
						*);;
					*);;
				*);;
			*);
			=> nrel_inclusion: .system_element_3316;
			=> nrel_note: [<p>Все семантически и синтаксически выделяемые классы sc-элементов, а также всевозможные подклассы этих классов являются экземплярами (элементами) <i>класса</i></p>]
			(*
				<- lang_ru;;
				=> nrel_format: format_html;;
			*);;

			.system_element_3316
			=> nrel_idtf: [<p>обозначение множества, не являющегося ни связкой, ни классом</p>]
			(*
				<- lang_ru;;
				=> nrel_format: format_html;;
			*);
			=> nrel_subdividing: {
				.system_element_3361
				(*
					<= nrel_inclusion: .system_element_3142;;
				*);
				.system_element_2807
				(*
					=> nrel_idtf: [<p>конкретная структура</p>];;
					<= nrel_inclusion: .system_element_3141;;
				*)
			};;
		*]
;;

		.system_element_3362
		=> nrel_inclusion: [*

			.system_element_3363
			=> nrel_inclusion: [*
				=> nrel_idtf: [<p>класс sc-элементов, определяемый сущностями, которые обозначаются этими sc-элементами, также доступностью (активностью использования) sc-элементов в процессе эксплуатации и эволюции базы знаний</p>]
				(*
					<- lang_ru;;
					=> nrel_format: format_html;;
				*);
				<- .system_element_3308
				(*
					=> nrel_inclusion: .system_element_3364;;
				*);
				<- .system_element_3317
				(*
					=> nrel_inclusion: .system_element_3364;;
				*);
				<- .system_element_3318
				(*
					<=> .system_element_3201: .system_element_3283;;
					=> nrel_inclusion: .system_element_3365;;
					=> nrel_note: [<p><i>обозначение sc-пары</i> может быть представлено либо <i>sc-узлом общего вида</i>, либо <i>sc-коннектором</i>. При этом каждый <i>sc-коннектор</i> представляет собой <i>обозначение sc-пары</i>.</p>]
					(*
						<- lang_ru;;
						=> nrel_format: format_html;;
					*);;
				*);
				<- .system_element_3319
				(*
					=> nrel_idtf: [<p>обозначение бинарной неориентированной связи между sc-элементами</p>];;
					<=> .system_element_3201: 
						.system_element_3364;
						.system_element_3366
					;;
					=> nrel_note: [<p><i>обозначение неориентированной sc-пары</i> может быть представлено либо <i>sc-узлом общего вида</i>, либо <i>sc-ребром</i>. При этом не каждое <i>sc-ребро</i> представляет обозначение <i>неориентированный sc-пары</i>. Некоторые из них представляют <i>обозначения ориентированных sc-пар неизвестной направленности</i>.</p>]
					(*
						<- lang_ru;;
						=> nrel_format: format_html;;
					*);;
				*);
				<- .system_element_3367
				(*
					<=> .system_element_3201: 
						.system_element_3364;
						.system_element_3366
					;;
				*);
				<- .system_element_3321
				(*
					=> nrel_idtf: [<p>обозначение бинарной ориентированной связи между sc-элементами</p>];;
					<=> .system_element_3201: 
						.system_element_3364;
						.system_element_3366
					;;
					=> nrel_inclusion: .system_element_3285;;
				*);
				<- .system_element_3368
				(*
					<=> .system_element_3201: 
						.system_element_3364;
						.system_element_3366;
						.system_element_3369
					;;
					=> nrel_inclusion: .system_element_3370;;
					<= .system_element_3371: {
						.system_element_3141;
						.system_element_3328;
						.system_element_3322
					};;
				*);
				<- .system_element_3315
				(*
					<= nrel_inclusion: .system_element_3364;;
				*);
				<- .system_element_3316
				(*
					<= nrel_inclusion: .system_element_3364;;
				*);;
			*]
;;

			.system_element_3280
			=> nrel_inclusion: [*
				=> .system_element_3373: .system_element_3372
				(*
					-> {
						[<p>Каждый sc-элемент является знаком (обозначением) некоторой описываемой сущности.</p>]
						(*
							<- lang_ru;;
							=> nrel_format: format_html;;
						*);
						[<p>Любая сущность может быть обозначена sc-элементом и, соответственно, описана в виде конструкции Ядра SC-кода.</p>]
						(*
							<- lang_ru;;
							=> nrel_format: format_html;;
						*);
						[<p>С помощью sc-элементов можно описать любые связи между sc-элементами и/или между сущностями, которые обозначаются этими sc-элементами. При этом указанные связи трактуются как множества связываемых sc-элементов и обозначаются sc-ребрами, sc-дугами, а в случае небинарных связей --- sc-узлами.</p>]
						(*
							<- lang_ru;;
							=> nrel_format: format_html;;
						*);
						[<p>Поскольку каждый <b>sc-коннектор</b> семантически трактуется как обозначение пары <b>sc-элементов</b>, связываемых (соединяемых) этим <b>sc-коннектором</b>, каждая пара инцидентности <b>sc-коннектора</b> семантически интерпретируется как обозначение пары принадлежности, связывающей <b>sc-коннектор</b> с одним из элементов обозначаемой им пары <b>sc-элементов</b>.</p>]
						(*
							<- lang_ru;;
							=> nrel_format: format_html;;
						*);
						[<p><u>Любая</u> описываемая сущность может быть обозначена sc-узлом общего вида, но обратное неверно, т.к. некоторые сущности могут быть обозначены sc-ребрами общего вида, sc-дугами общего вида, базовыми sc-дугами.</p>]
						(*
							<- lang_ru;;
							=> nrel_format: format_html;;
						*);
						[<p>Каждое sc-ребро является обозначением либо бинарной неориентированной связи между sc-элементами, либо бинарной ориентированной связи неизвестной направленности между sc-элементами.</p>]
						(*
							<- lang_ru;;
							=> nrel_format: format_html;;
						*);
						[<p>Любая бинарная неориентированная связь между sc-элементами может быть обозначена sc-ребром, но обратное неверно.</p>]
						(*
							<- lang_ru;;
							=> nrel_format: format_html;;
						*)
					};;
				*);;
			*];;

			.system_element_3374
			=> nrel_idtf: [<p>Правила модификации синтаксического типа sc-элементов в рамках Ядра SC-кода</p>]
			(*
				<- lang_ru;;
				=> nrel_format: format_html;;
			*);
			-> {
				[<p>Если <i>sc-узел общего вида</i> является <i>обозначением sc-пары</i>, то он трансформируется в <i>sc-коннектор</i></p>]
				(*
					<- lang_ru;;
					=> nrel_format: format_html;;
				*);
				[<p>Если <i>sc-узел общего вида</i> является <i>обозначением неориентированной sc-пары</i> или <i>обозначением ориентированной sc-пары неизвестной направленности</i>, то он трансформируется в <i>sc-ребро общего вида</i></p>]
				(*
					<- lang_ru;;
					=> nrel_format: format_html;;
				*);
				[<p>Если <i>sc-узел общего вида</i> или <i>sc-ребро общего вида</i> являются <i>обозначением ориентированной sc-пары</i> и при этом дополнительно указана направленность этой sc-пары, то она трансформируется в <i>sc-дугу общего вида</i>.</p>]
				(*
					<- lang_ru;;
					=> nrel_format: format_html;;
				*);
				[<p>Если <i>sc-узел общего вида</i> или <i>sc-ребро общего вида</i> или <i>sc-дуга общего вида</i> являются <i>константными постоянными позитивными парами принадлежности</i>, то они трансформируются в <i>базовую sc-дугу</i>.</p>]
				(*
					<- lang_ru;;
					=> nrel_format: format_html;;
				*)
			};;

			.system_element_437
			-> {
				.system_element_3375;
				.system_element_3376;
				.system_element_3363
			};;
		*];;
	*];;

	.system_element_3264
	=> nrel_inclusion: [*

		.system_element_3377
		-> {
			.system_element_606
			(*
				<= .system_element_3378: .system_element_3280;;
				=> nrel_idtf: [<p>Синтаксическое расширение Ядра SC-кода</p>]
				(*
					<- lang_ru;;
					=> nrel_format: format_html;;
					=> nrel_note: [<p>Синтаксическое расширение Ядра SC-кода заключается во введении дополнительного класса синтаксически эквивалентных элементарных фрагментов конструкций Ядра SC-кода --- sc-элементов, обозначающих "внутренние" файлы, хранимые в памяти ostis-системы</p>]
					(*
						<- lang_ru;;
						=> nrel_format: format_html;;
					*);;
				*);;
				<=> .system_element_3379: .system_element_3280;;
				=> nrel_note: [<p>Семантическая эквивалентность <i>SC-кода</i> и <i>Ядра SC-кода</i> является следствием того, что <i>SC-код</i> является <u>синтаксическим</u> расширением <i>Ядра SC-кода</i></p>]
				(*
					<- lang_ru;;
					=> nrel_format: format_html;;
				*);;
				=> nrel_idtf: [<p>Результат введения в <i>Ядро SC-кода</i> sc-узлов, имеющих содержимое и обозначающих файлы, хранимые в памяти ostis-системы, т.е. внутренние файлы ostis-системы</p>]
				(*
					<- lang_ru;;
					=> nrel_format: format_html;;
				*);;
				=> nrel_note: [<p>Результатом просмотренного расширения <i>Ядра SC-кода</i> является расширение <i>Алфавита Ядра SC-кода</i></p>]
				(*
					<- lang_ru;;
					=> nrel_format: format_html;;
				*);;
				=> nrel_note: [<p>Все <i>файлы</i>, представляющие собой электронные образы инородных для <i>SC-кода</i> информационных конструкций, можно представить в <i>SC-коде</i> с помощью графовых структур, в которых <i>sc-элементы</i> обозначают буквы текстов или пиксели изображений. Но такой вариант кодирования внешних для <i>ostis-системы</i> информационных конструкций не дает возможности непосредственно использовать накопленный человечеством арсенал электронных информационных ресурсов.</p>]
				(*
					<- lang_ru;;
					=> nrel_format: format_html;;
				*);;
				=> nrel_note: [<p>Важнейшим видом внутренних <i>файлов ostis-систем</i> являются внутренние файлы <i>внешних идентификаторов sc-элементов</i> (в частности, имен sc-элементов), представляющих <i>sc-элементы</i> в текстах внешних языков (в том числе, в текстах <i>SCs-кода</i> и <i>SCn-кода</i>)</p>]
				(*
					<- lang_ru;;
					=> nrel_format: format_html;;
				*);;
			*);
			...
			(*
				<=> .system_element_319: {
					.system_element_3280;
					.system_element_606
				};;
				=> .system_element_3380: [<p>Множество всех элементов конструкций <i>Ядра SC-кода</i> и Множество всех элементов конструкций <i>SC-кода</i> полностью совпадают, т.к. для каждого элемента конструкции <i>Ядра SC-кода</i> существует синонимичный ему элемент конструкции <i>SC-кода</i> и наоборот. Из этого следует, что семантическая классификации <i>элементов информационных конструкций</i> <i>SC-кода</i> и <i>Ядра SC-кода</i> также полностью совпадают.Семантика <i>SC-кода</i> ничем не отличается от семантики <i>Ядра SC-кода</i>. То есть все, что может быть обозначено и описано текстами <i>SC-кода</i>, может быть обозначено и описано текстами <i>Ядра SC-кода</i>. Отличие <i>SC-кода</i> от <i>Ядра SC-кода</i> заключается только в том, что в <i>SC-код</i> добавляется новый синтаксически выделяемый класс sc-элементов --- класс sc-элементов, являющихся знаками конкретных (константных) файлов, хранимых в памяти ostis-системы. Такие <i>внутренние файлы</i> необходимы для того, чтобы в <i>памяти ostis-системы</i> можно было хранить и обрабатывать <i>информационные конструкции</i>, не являющиеся текстами <i>SC-кода</i>, что необходимо при вводе (восприятии) информации, поступающей извне, а также при генерации <i>информационных конструкций</i>, передаваемых другим субъектам. Включение в <i>SC-код</i> специальных <u>синтаксически</u> выделяемых <i>sc-узлов</i>, обозначающих хранимые в <i>sc-памяти</i> электронные образы (файлы) различного вида <i>информационных конструкций</i>, не являющихся конструкциями <i>SC-кода</i>, дает возможность непосредственно в <i>памяти ostis-системы</i>, то есть в одной и той же запоминающий среде обрабатывать не только конструкции <i>SC-кода</i>, но и "инородные" для него конструкции, что для необходимо для реализации <i>интерфейса ostis-системы</i>, обеспечивающего ее взаимодействие с <i>внешней средой</i>. Без такой реализации <i>интерфейса ostis-системы</i> невозможно реализовать синтаксический анализ, семантический анализ и понимание, а также невозможно реализовать синтез (генерацию) внешних информационных конструкций, принадлежащих заданному внешнему языку и семантически эквивалентных заданному смыслу. Поскольку все синтаксические и семантические свойства <i>SC-кода</i> и <i>Ядра SC-кода</i> являются весьма близкими, при описании <i>SC-кода</i> акцентируется внимание на его отличия от <i>Ядра SC-кода</i>, а также на более детальное рассмотрение семантической классификации элементов.</p>]
				(*
					<- lang_ru;;
					=> nrel_format: format_html;;
				*);;
			*)
		}
;;

		.system_element_3381
		=> nrel_inclusion: [*

			.system_element_606
			=> .system_element_192: .system_element_3382
			(*
				=> nrel_note: [<p><i>Синтаксис SC-кода</i> отличается от <i>Синтаксиса Ядра SC-кода</i> только тем, что в <i>Алфавит <b>SC-кода</b></i> дополнительно вводится класс sc-узлов, являющихся знаками <i>файлов</i>, хранимых в памяти <i><b>ostis-системы</b></i></p>]
				(*
					<- lang_ru;;
					=> nrel_format: format_html;;
				*);;
			*);
			=> .system_element_3383: .system_element_3210
			(*
				=> nrel_idtf: [<p>элемент конструкции SC-кода</p>];;
				=> nrel_note: [<p>Множество всех элементов конструкций SC-кода совпадает со множеством всех элементов конструкций Ядра SC-кода. Просто в конструкциях SC-кода некоторые sc-элементы, имеющие "синтаксическую метку" (синтаксический тип) <i>sc-узла общего вида</i>, будут иметь "метку" sc-узла, являющегося знаком <i>внутреннего файла</i>,  хранимого в памяти <i>ostis-системы</i></p>]
				(*
					<- lang_ru;;
					=> nrel_format: format_html;;
				*);;
			*);
			=> nrel_explanation: [<p><i>Синтаксис SC-кода</i> задается
			<ul>
				<li> типологией (алфавитом) sc-элементов (атомарных фрагментов текстов SC-кода);
				<li> правилами соединения (инцидентности) sc-элементов (например, sc-элементы каких типов не могут быть инцидентными друг другу);
				<li> типологией конфигураций sc-элементов (связки, классы, структуры), связями между конфигурациями sc-элементов (в частности, теоретико-множественными)</li>
			<ul></p>]
			(*
				<- lang_ru;;
				=> nrel_format: format_html;;
			*);;

			.system_element_3384
			<= .system_element_209: .system_element_606;
			=> nrel_subdividing: .system_element_3210;
			<=> .system_element_319: {
				.system_element_3385
			};
			<=> .system_element_319: {
				.system_element_3283;
				.system_element_3386;
				.system_element_3284;
				.system_element_3285;
				.system_element_3286
			};;

			.system_element_3384
			=> nrel_idtf: [<p>Алфавит sc-элементов в рамках SC-кода</p>]
			(*
				<- lang_ru;;
				=> nrel_format: format_html;;
			*);
			=> nrel_idtf: [<p>Семейство всех максимальных множеств синтаксически эквивалентных (в рамках SC-кода) sc-элементов</p>]
			(*
				<- lang_ru;;
				=> nrel_format: format_html;;
			*);
			=> nrel_idtf: [<p>Семейство классов синтаксически эквивалентных sc-элементов SC-кода</p>]
			(*
				<- lang_ru;;
				=> nrel_format: format_html;;
			*);
			=> nrel_idtf: [<p>Семейство всех множеств, в каждое из которых входят все синтаксически эквивалентные друг другу (в рамках SC-кода) sc-элементы и только они</p>]
			(*
				<- lang_ru;;
				=> nrel_format: format_html;;
			*);
			=> nrel_idtf: [<p>Фактор-множество отношения "синтаксическая эквивалентность sc-элементов в рамках SC-кода"</p>]
			(*
				<- lang_ru;;
				=> nrel_format: format_html;;
			*);
			<=> .system_element_3387
			(*
				<- .system_element_3388;;
			*);
			=> nrel_idtf: [<p>Семейство множеств sc-элементов, являющихся результатом разбиения максимального множества <b>sc-элементов</b> SC-кода (класса всевозможных sc-элементов) по признаку синтаксической эквивалентности sc-элементов</p>]
			(*
				<- lang_ru;;
				=> nrel_format: format_html;;
			*);
			=> nrel_idtf: [<p>Признак (параметр) синтаксической эквивалентности sc-элементов</p>]
			(*
				<- lang_ru;;
				=> nrel_format: format_html;;
			*);;

			.system_element_2879
			=> nrel_idtf: [<p>sc-узел, имеющий содержимое</p>]
			(*
				<- lang_ru;;
				=> nrel_format: format_html;;
			*);
			=> nrel_idtf: [<p>sc-ссылка</p>]
			(*
				<- lang_ru;;
				=> nrel_format: format_html;;
			*);
			=> nrel_idtf: [<p>множество всевозможных sc-узлов, имеющих содержимое, хранимое в памяти ostis-системы</p>]
			(*
				<- lang_ru;;
				=> nrel_format: format_html;;
			*);
			=> nrel_idtf: [<p>внутренний файл, хранимый в памяти ostis-системы</p>]
			(*
				<- lang_ru;;
				=> nrel_format: format_html;;
			*);
			=> nrel_idtf: [<p>внутренний файл для заданной ostis-системы (той ostis-системы, в памяти которой хранится sc-узел, обозначающий этот файл)</p>]
			(*
				<- lang_ru;;
				=> nrel_format: format_html;;
			*);
			=> nrel_idtf: [<p>sc-узел, являющийся знаком конкретного файла, хранимого в той же sc-памяти (в качестве содержимого sc-узла), в которой находится и сам указанный sc-узел</p>]
			(*
				<- lang_ru;;
				=> nrel_format: format_html;;
			*);
			=> nrel_idtf: [<p>файл, знак которого находится в той же sc-памяти, в которой находится и сам файл</p>]
			(*
				<- lang_ru;;
				=> nrel_format: format_html;;
			*);
			=> nrel_idtf: [<p>свой файл ostis-системы</p>]
			(*
				<- lang_ru;;
				=> nrel_format: format_html;;
			*);
			<= nrel_inclusion: .system_element_3389;;

			.system_element_3376
			=> nrel_idtf: [<p>класс sc-элементов, определяемый на основе Алфавита SC-кода</p>]
			(*
				<- lang_ru;;
				=> nrel_format: format_html;;
			*);
			=> nrel_inclusion: .system_element_3384;
			-> .system_element_3390;;
		*];;

		.system_element_3391
		=> nrel_inclusion: [*

			.system_element_3210
			=> nrel_subdividing: {
				.system_element_3283
				(*
					=> nrel_subdividing: {
						.system_element_3390;
						.system_element_2879
					};;
				*);
				.system_element_2737
				(*
					=> nrel_subdividing: {
						.system_element_3284;
						.system_element_3288
						(*
							=> nrel_subdividing: {
								.system_element_3285;
								.system_element_3286
							};;
						*)
					};;
				*)
			};
			=> nrel_note: [<p>Данная <i>Синтаксическая классификация sc-элементов</i> от <i>Синтаксической классификации sc-элементов Ядра SC-кода</i> отличается только дополнительным уточнением синтаксической типологии <i>sc-узлов</i></p>]
			(*
				<- lang_ru;;
				=> nrel_format: format_html;;
			*);;
		*];;

		.system_element_3392
		=> nrel_inclusion: [*

			.system_element_3392
			=> nrel_summary: [<p><i>Денотационную семантику SC-кода</i> рассмотрим как расширение и уточнение <i>Денотационной семантики Ядра SC-кода</i> (смотрите предыдущий сегмент "<i>Описание Ядра SC-кода</i>"). Изложение построим как последовательное уточнение следующих понятий:

			<ul>

				<li> <i>sc-переменная</i>

				<li> <i>обозначение дискретной информационной конструкции</i>

				<li> <i>дискретная информационная конструкция</i> (рассмотрим различные параметры и отношения, заданные на множестве дискретных информационных конструкций)

				<li> <i>знание</i> (как частный вид дискретных информационных конструкций)

				<li> <i>файл</i> (как <i>sc-константа</i>, являющаяся <i>обозначением файла</i>)

				<li> <i>внутренний файл ostis-системы</i>

				<li> <i>структура</i> (как <i>дискретная информационная конструкция</i>, принадлежащая <i>SC-коду</i>)</li>

			<ul></p>]
			(*
				<- lang_ru;;
				=> nrel_format: format_html;;
			*);;

			.system_element_606
			=> .system_element_3299: .system_element_3392
			(*
				=> nrel_explanation: [<p><i>Денотационная семантика SC-кода</i> задается
				<ul>
					<li> семантической интерпретацией sc-элементов и их конфигураций;
					<li> семантической интерпретацией инцидентности sc-элементов;
					<li> иерархической системой <i>предметных областей</i>;
					<li> структурой используемых понятий в каждой предметной области (исследуемые классы объектов, исследуемые отношения, исследуемые классы объектов отношений из смежных предметных областей, ключевые экземпляры исследуемых классов объектов);
					<li> <i>онтологиями предметных областей</i>;</li>
				<ul></p>]
				(*
					<- lang_ru;;
					=> nrel_format: format_html;;
				*);;
			*);;
		*];;

		.system_element_3393
		=> nrel_inclusion: [*

			.system_element_3142
			=> nrel_idtf: [<p>sc-элемент, представляющий собой обозначение произвольной (переменной) сущности из некоторого дополнительно уточняемого множества обозначений других сущностей, которые считаются возможными значениями указанной произвольной сущности</p>]
			(*
				<- lang_ru;;
				=> nrel_format: format_html;;
			*);
			<= .system_element_3395: .system_element_3394
			(*
				=> nrel_idtf: [<p>Бинарное ориентированное отношение, связывающее sc-переменные с их возможными значениями*</p>];;
				=> nrel_explanation: [<p>Это одно из отношений, заданных на множестве sc-переменных</p>]
				(*
					<- lang_ru;;
					=> nrel_format: format_html;;
				*);;
			*);
			=> nrel_subdividing: .system_element_3396
			(*
				<=> .system_element_319: {
					.system_element_3397
					(*
						=> nrel_idtf: [<p>sc-переменная, обозначающая терминальную сущность</p>];;
						=> nrel_idtf: [<p>sc-переменная, значением или значением значения и т.д. которой является терминальная сущность</p>]
						(*
							<- lang_ru;;
							=> nrel_format: format_html;;
						*);;
						=> nrel_idtf: [<p>sc-переменная, "конечным" значением которой является терминальная сущность</p>]
						(*
							<- lang_ru;;
							=> nrel_format: format_html;;
						*);;
						=> nrel_idtf: [<p>обозначение произвольной терминальной сущности</p>]
						(*
							<- lang_ru;;
							=> nrel_format: format_html;;
						*);;
					*);
					.system_element_3398
				};;
			*);
			=> nrel_subdividing: {
				.system_element_3399
				(*
					=> nrel_inclusion: .system_element_3400
					(*
						=> nrel_idtf: [<p>sc-переменная, все значения которой являются sc-константами</p>]
						(*
							<- lang_ru;;
							=> nrel_format: format_html;;
						*);;
					*);;
					=> nrel_inclusion: .system_element_3401
					(*
						=> nrel_idtf: [<p>sc-переменная, все значения которой являются первичными sc-переменными</p>]
						(*
							<- lang_ru;;
							=> nrel_format: format_html;;
						*);;
					*);;
					=> nrel_inclusion: .system_element_3402
					(*
						=> nrel_idtf: [<p>sc-переменная, все значения которой являются вторичными sc-переменными</p>]
						(*
							<- lang_ru;;
							=> nrel_format: format_html;;
						*);;
					*);;
				*);
				.system_element_3403
			};
			=> nrel_subdividing: {
				.system_element_3404
				(*
					=> nrel_inclusion: .system_element_3405
					(*
						=> nrel_idtf: [<p>sc-переменная, все значения которой являются sc-узлами</p>]
						(*
							<- lang_ru;;
							=> nrel_format: format_html;;
						*);;
					*);;
					=> nrel_inclusion: .system_element_3406;;
					=> nrel_inclusion: .system_element_3407;;
				*);
				.system_element_3408
			};;

			.system_element_3359
			=> nrel_subdividing: {
				.system_element_3311;
				.system_element_3409
				(*
					=> nrel_idtf: [<p>обозначение дискретной информационной конструкции, принадлежащей SC-коду</p>];;
					=> nrel_idtf: [<p>обозначение sc-конструкции</p>]
					(*
						<- lang_ru;;
						=> nrel_format: format_html;;
					*);;
				*)
			};
			=> nrel_subdividing: {
				.system_element_3410
				(*
					=> nrel_idtf: [<p>sc-переменная, обозначающая дискретную информационную конструкцию</p>]
					(*
						<- lang_ru;;
						=> nrel_format: format_html;;
					*);;
				*);
				.system_element_3411
				(*
					=> nrel_idtf: [<p>sc-константа, обозначающая конкретную дискретную информационную конструкцию</p>]
					(*
						<- lang_ru;;
						=> nrel_format: format_html;;
					*);;
				*)
			};;
		*];;

		.system_element_3412
		=> nrel_inclusion: [*

			.system_element_3413
			-> .system_element_3414
			(*
				-> .system_element_3415;;
				-> .system_element_486
				(*
					=> nrel_idtf: [<p>компьютерная форма предcтавления дискретных информационных конструкций в линейной адресной памяти</p>]
					(*
						<- lang_ru;;
						=> nrel_format: format_html;;
					*);;
				*);;
				-> .system_element_2807
				(*
					=> nrel_idtf: [<p>компьютерная форма представления дискретных информационных конструкций в графодинамической ассоциативной памяти</p>];;
					=> nrel_idtf: [<p>представление дискретных информационных конструкций в виде конструкций SC-кода в памяти ostis-систем</p>]
					(*
						<- lang_ru;;
						=> nrel_format: format_html;;
					*);;
				*);;
			*);
			-> .system_element_3416
			(*
				-> .system_element_3417
				(*
					=> nrel_idtf: [<p>дискретная информационная конструкция, которая находится вне памяти той ostis-системы, в которой находится sc-узел, обозначающий эту информационную конструкцию</p>];;
					=> nrel_subdividing: {
						.system_element_3418
						(*
							=> nrel_note: [<p>Очевидно, что информационные конструкции такого вида принципиально не могут быть внутренними информационными конструкциями ostis-систем, хранимыми в их памяти.</p>]
							(*
								<- lang_ru;;
								=> nrel_format: format_html;;
							*);;
						*);
						.system_element_3419
						(*
							=> nrel_subdividing: {
								.system_element_3420
								(*
									=> nrel_idtf: [<p>файл, который не хранится в памяти данной ostis-системы, но о которой известно, какая система, не являющаяся ostis-системой, им "владеет" и как его "скачать"</p>];;
									=> nrel_idtf: [<p>внешний файл ostis-системы, принадлежащий компьютерной системе, которая не является ostis-системой</p>]
									(*
										<- lang_ru;;
										=> nrel_format: format_html;;
									*);;
								*);
								.system_element_3421
								(*
									=> nrel_idtf: [<p>файл, который не является внутренним файлом данной ostis-системы, в памяти которой находится знак этого файла, но является внутренним знаком другой ostis-системы</p>];;
									=> nrel_idtf: [<p>внешний файл ostis-системы, принадлежащий другой ostis-системе</p>]
									(*
										<- lang_ru;;
										=> nrel_format: format_html;;
									*);;
								*)
							};;
						*);
						.system_element_3422
						(*
							=> nrel_idtf: [<p>структура, хранимая в памяти другой ostis-системы</p>];;
							=> nrel_idtf: [<p>структура другой ostis-системы</p>]
							(*
								<- lang_ru;;
								=> nrel_format: format_html;;
							*);;
						*)
					};;
				*);;
			*);
			-> .system_element_3423
			(*
				=> nrel_idtf: [<p>внутренняя для заданной ostis-системы информационная конструкция</p>];;
				=> nrel_idtf: [<p>внутренняя информационная конструкция той ostis-системы, в памяти (sc-памяти) которой хранится знак (sc-узел) этой информационной конструкции</p>]
				(*
					<- lang_ru;;
					=> nrel_format: format_html;;
				*);;
				=> nrel_note: [<p>Внутренние информационные конструкции ostis-систем (т.е. конструкции, обрабатываемые в их памяти) могут быть только дискретными, хотя и не обязательно знаковыми.</p>]
				(*
					<- lang_ru;;
					=> nrel_format: format_html;;
				*);;
				=> nrel_subdividing: {
					.system_element_2879;
					.system_element_3424
					(*
						=> nrel_idtf: [<p>структура, которой в памяти данной ostis-системы соответствует не только знак этой структуры, но и она сама</p>];;
						=> nrel_idtf: [<p>структура, хранимая и обрабатываемая в памяти данной ostis-системы</p>]
						(*
							<- lang_ru;;
							=> nrel_format: format_html;;
						*);;
						=> nrel_idtf: [<p>внутренняя структура ostis-системы</p>]
						(*
							<- lang_ru;;
							=> nrel_format: format_html;;
						*);;
					*)
				};;
				=> nrel_subdividing: {
					.system_element_3425;
					.system_element_3426;
					.system_element_3427
				};;
			*);
			-> .system_element_3428;
			-> .system_element_3429;
			-> .system_element_3430;
			-> .system_element_2807
			(*
				=> nrel_idtf: [<p>информационная конструкция SC-кода</p>]
				(*
					<- lang_ru;;
					=> nrel_format: format_html;;
				*);;
			*);
			-> .system_element_3431
			(*
				=> nrel_idtf: [<p>информационная конструкция SCg-кода</p>]
				(*
					<- lang_ru;;
					=> nrel_format: format_html;;
				*);;
			*);
			-> .system_element_3432
			(*
				=> nrel_idtf: [<p>информационная конструкция SCs-кода</p>]
				(*
					<- lang_ru;;
					=> nrel_format: format_html;;
				*);;
			*);
			-> .system_element_3433
			(*
				=> nrel_idtf: [<p>информационная конструкция SCn-кода</p>]
				(*
					<- lang_ru;;
					=> nrel_format: format_html;;
				*);;
			*);
			-> .system_element_3434
			(*
				-> .system_element_3435
				(*
					=> .system_element_436: [<p>дискретная информационная конструкция, у которой для каждой пары её элементов существует маршрут, соединяющий эти элементы и проходящий по связям их инцидентности</p>]
					(*
						<- lang_ru;;
						=> nrel_format: format_html;;
					*);;
				*);;
				-> .system_element_3436;;
				=> nrel_note: [<p>Можно оценивать "силу" синтаксической связности --- наличие и число "мостов" в графе инцидентности элементов дискретной информационной конструкции, наличие и число точек "сочленения", минимальное число элементов конструкции, удаление которых приводит к несвязности. Можно также оценивать уровень синтаксической несвязности дискретной информационной конструкции числом компонентов связности этой конструкции.</p>]
				(*
					<- lang_ru;;
					=> nrel_format: format_html;;
				*);;
			*);
			-> .system_element_3437
			(*
				=> nrel_note: [<p>Свойством семантической связности могут обладать только знаковые конструкции.</p>];;
				-> .system_element_3438
				(*
					=> .system_element_436: [<p>Это конструкция, которая обладает следующим свойством: для любой ее декомпозиции на два синтаксически правильных компонента всегда найдется пара синонимичных знаков, один из которых находится в одном компоненте, а другой --- в другом.</p>]
					(*
						<- lang_ru;;
						=> nrel_format: format_html;;
					*);;
				*);;
				-> .system_element_3439;;
			*);;

			.system_element_3440
			-> .system_element_3441
			(*
				<- .system_element_3442;;
				=> nrel_subdividing: {
					.system_element_3443
					(*
						<= .system_element_325: {
							.system_element_3444;
							.system_element_3445
						};;
					*);
					.system_element_3446
					(*
						<= .system_element_126: {
							.system_element_3447;
							.system_element_3448
						};;
						=> nrel_subdividing: {
							.system_element_3449
							(*
								<= .system_element_325: {
									.system_element_3450;
									.system_element_3451
								};;
							*);
							.system_element_3452
							(*
								<= .system_element_126: {
									.system_element_3453;
									.system_element_3454
								};;
							*)
						};;
					*)
				};;
			*);;

			.system_element_3312
			=> nrel_subdividing: {
				.system_element_3455
				(*
					=> nrel_idtf: [<p>sc-переменная, каждым значением которой является обозначение файла</p>];;
					=> nrel_idtf: [<p>обозначение произвольного файла</p>]
					(*
						<- lang_ru;;
						=> nrel_format: format_html;;
					*);;
					=> nrel_idtf: [<p>sc-переменнная, обозначающая файл</p>]
					(*
						<- lang_ru;;
						=> nrel_format: format_html;;
					*);;
				*);
				.system_element_3456
				(*
					=> nrel_idtf: [<p>знак конкретного файла</p>];;
					=> nrel_idtf: [<p>sc-константа, обозначающая конкретный файл</p>]
					(*
						<- lang_ru;;
						=> nrel_format: format_html;;
					*);;
				*)
			};
			=> nrel_subdividing: {
				.system_element_3457
				(*
					=> nrel_subdividing: {
						.system_element_3458;
						.system_element_3419
					};;
				*);
				.system_element_3459
				(*
					=> nrel_subdividing: {
						.system_element_3460;
						.system_element_2879
					};;
				*)
			};;

			.system_element_486
			=> nrel_idtf: [<p>sc-узел, обозначающий файл</p>]
			(*
				<- lang_ru;;
				=> nrel_format: format_html;;
			*);
			=> nrel_idtf: [<p>знак файла</p>]
			(*
				<- lang_ru;;
				=> nrel_format: format_html;;
			*);
			=> nrel_subdividing: {
				.system_element_3461
				(*
					=> nrel_idtf: [<p>естественно-языковой файл</p>]
					(*
						<- lang_ru;;
						=> nrel_format: format_html;;
					*);;
				*);
				.system_element_3462
				(*
					=> nrel_inclusion: .system_element_3463;;
					=> nrel_inclusion: .system_element_3464;;
					=> nrel_inclusion: .system_element_3465;;
				*);
				.system_element_3466;
				.system_element_3467;
				.system_element_3468;
				.system_element_3469;
				.system_element_3470
			};
			=> nrel_subdividing: {
				.system_element_3471
				(*
					=> nrel_idtf: [<p>файл, являющийся конкретным электронным документом или электронным образом конкретной внешней информационной конструкции</p>]
					(*
						<- lang_ru;;
						=> nrel_format: format_html;;
					*);;
				*);
				.system_element_3177
				(*
					=> nrel_idtf: [<p>файл-класс ostis-системы</p>];;
					=> nrel_idtf: [<p>файл, являющийся одновременно также и знаком множества всевозможных экземпляров (копий) этого файла</p>]
					(*
						<- lang_ru;;
						=> nrel_format: format_html;;
					*);;
				*)
			};
			=> nrel_subdividing: {
				.system_element_3419;
				.system_element_3472
			};;

			.system_element_2879
			<- .system_element_3376;
			<- .system_element_3473;
			=> nrel_note: [<p>Данный класс sc-элементов, являющихся знаками файлов, хранимых в памяти ostis-систем, в отличие от других синтаксически выделяемых классов sc-элементов, представляет собой одновременно  синтаксически и семантически выделяемый класс sc-элементов. Это обусловлено (1) тем, что каждый экземпляр данного класса sc-элементов является знаком конкретного файла, хранимого в памяти ostis-системы, и (2) тем, что каждый файл, хранимый в памяти ostis-системы, может и должен быть обозначен только таким sc-элементом, который является экземпляром рассматриваемого класса sc-элементов.</p>]
			(*
				<- lang_ru;;
				=> nrel_format: format_html;;
			*);
			=> nrel_note: [<p>sc-узел может быть знаком файла, находящегося в памяти другой ostis-системы (не в той, в которой хранится этот sc-узел). Но в этом случае указанный sc-узел не будет принадлежать рассматриваемому классу sc-узлов.</p>]
			(*
				<- lang_ru;;
				=> nrel_format: format_html;;
			*);
			=> nrel_idtf: [<p>знак файла ostis-системы, хранимого в "моей" памяти</p>]
			(*
				<- lang_ru;;
				=> nrel_format: format_html;;
			*);
			=> nrel_note: [<p>Следует отличать синтаксическую эквивалентность файлов, семантическую эквивалентность файлов и совпадение файлов (когда речь идет об одном и том же файле). Т.е. копия файла и один и тот же файл --- это разные вещи.</p>]
			(*
				<- lang_ru;;
				=> nrel_format: format_html;;
			*);;
		*];;

		.system_element_3474
		=> nrel_inclusion: [*

			.system_element_2807
			=> nrel_idtf: [<p>структура, элементами которой являются sc-элементы</p>]
			(*
				<- lang_ru;;
				=> nrel_format: format_html;;
			*);
			=> nrel_idtf: [<p>множество sc-элементов (множество), не являющиеся ни связкой (связкой sc-элементов), ни классом (множеством всех sc-элементов, эквивалентных в определенном смысле)</p>]
			(*
				<- lang_ru;;
				=> nrel_format: format_html;;
			*);
			=> nrel_idtf: [<p>знак конкретной (константной) структуры</p>]
			(*
				<- lang_ru;;
				=> nrel_format: format_html;;
			*);
			=> nrel_idtf: [<p>Класс всех тех и только тех sc-элементов, каждый из которых является знаком конкретной структуры</p>]
			(*
				<- lang_ru;;
				=> nrel_format: format_html;;
			*);
			=> nrel_idtf: [<p>Знак класса всех sc-элементов, являющихся знаками конкретных структур</p>]
			(*
				<- lang_ru;;
				=> nrel_format: format_html;;
			*);
			=> nrel_idtf: [<p>Константный sc-элемент (точнее, sc-узел), являющийся знаком конкретного класса всех sc-элементов, являющихся знаками конкретных структур</p>]
			(*
				<- lang_ru;;
				=> nrel_format: format_html;;
			*);
			=> nrel_idtf: [<p>sc-конструкция</p>]
			(*
				<- lang_ru;;
				=> nrel_format: format_html;;
			*);
			=> nrel_idtf: [<p>информационная конструкция, принадлежащая SC-коду</p>]
			(*
				<- lang_ru;;
				=> nrel_format: format_html;;
			*);
			=> nrel_inclusion: .system_element_3475
			(*
				=> nrel_idtf: [<p>структура, удовлетворяющая синтаксическим правилам SC-кода</p>];;
				=> nrel_inclusion: .system_element_3476
				(*
					=> nrel_idtf: [<p>семантически корректный и целостный sc-текст</p>]
					(*
						<- lang_ru;;
						=> nrel_format: format_html;;
					*);;
				*);;
			*);
			=> nrel_subdividing: .system_element_3477
			(*
				<=> .system_element_319: {
					.system_element_3478;
					.system_element_3479
					(*
						=> nrel_note: [<p>Такие структуры при представлении логических высказываний в SC-коде являются аналогами атомарных логических формул.</p>]
						(*
							<- lang_ru;;
							=> nrel_format: format_html;;
						*);;
					*)
				};;
			*);
			=> nrel_subdividing: .system_element_3480
			(*
				<=> .system_element_319: {
					.system_element_3481
					(*
						=> nrel_idtf: [<p>ситуация, представленная в SC-коде</p>];;
						=> nrel_idtf: [<p>ситуация</p>]
						(*
							<- lang_ru;;
							=> nrel_format: format_html;;
						*);;
						=> nrel_idtf: [<p>структура, в состав которой входят знаки временных сущностей и которая сама является временной сущностью (при этом время существования такой структуры совпадает с временем одновременного существования всех временных сущностей, знаки которых входят в состав этой ситуативной структуры).</p>]
						(*
							<- lang_ru;;
							=> nrel_format: format_html;;
						*);;
						=> nrel_subdividing: {
							.system_element_3482;
							.system_element_3483
						};;
					*);
					.system_element_3484;
					.system_element_3485
					(*
						=> nrel_explanation: [<p>В отличие от ситуативной структуры конфигурация динамической структуры меняется во времени в зависимости от момента появления и момента завершения существования каждой временной сущности (в том числе временной связи), знак которой входит в состав динамической структуры. Каждой динамической структуре можно поставить в соответствие темпоральную последовательность состояний (ситуаций) и событий.</p>]
						(*
							<- lang_ru;;
							=> nrel_format: format_html;;
						*);;
					*)
				};;
			*);
			=> nrel_subdividing: .system_element_3486
			(*
				<=> .system_element_319: {
					.system_element_2808
					(*
						=> nrel_subdividing: .system_element_3487
						(*
							=> nrel_idtf: [<p>Минимальное число sc-элементов, удаление которых преобразует связную структуру в несвязную</p>];;
							<- .system_element_3488
							(*
								<= nrel_subdividing: .system_element_3489;;
								<= nrel_subdividing: .system_element_3490;;
							*);;
						*);;
					*);
					.system_element_2809
					(*
						<= nrel_subdividing: .system_element_3491;;
						<= nrel_inclusion: .system_element_2810
						(*
							=> nrel_idtf: [<p>структура, в состав элементов которой sc-коннекторы не входят</p>]
							(*
								<- lang_ru;;
								=> nrel_format: format_html;;
							*);;
						*);;
					*)
				};;
				=> nrel_note: [<p>Важнейшей особенностью SC-кода является то, что для конструкций SC-кода (для структур) нет необходимости противопоставлять синтаксическую и семантическую связность, то есть все синтаксически связные структуры являются также и семантически связными и наоборот.</p>]
				(*
					<- lang_ru;;
					=> nrel_format: format_html;;
				*);;
			*);
			=> nrel_subdividing: .system_element_3492
			(*
				<=> .system_element_319: {
					.system_element_3493
					(*
						=> nrel_idtf: [<p>структура, в число элементов которой входит sc-узел, обозначающий саму эту структуру</p>];;
						<= nrel_inclusion: .system_element_3494;;
					*);
					.system_element_3495
				};;
			*);
			=> nrel_subdividing: .system_element_3496
			(*
				<=> .system_element_319: {
					.system_element_3497;
					.system_element_3498
				};;
			*);
			=> nrel_subdividing: {
				.system_element_3499
				(*
					=> nrel_idtf: [<p>синтаксически неправильно построенная структура</p>];;
					<= .system_element_325: {
						.system_element_3500
						(*
							=> nrel_idtf: [<p>структура, содержащая фрагменты, противоречащие <i>Синтаксическим правилам SC-кода</i> (ошибочные фрагменты)</p>]
							(*
								<- lang_ru;;
								=> nrel_format: format_html;;
							*);;
						*);
						.system_element_3501
						(*
							=> nrel_idtf: [<p>структура, в которой имеется синтаксически выявленная недостаточность, неполнота (то есть имеется некоторое количество информационных дыр)</p>]
							(*
								<- lang_ru;;
								=> nrel_format: format_html;;
							*);;
						*)
					};;
					=> nrel_note: [<p>Разделение <i>Синтаксических правил SC-кода</i> на правила анализа синтаксической корректности и правила анализа синтаксической целостности (полноты) существенно упрощает процедуру синтаксического анализа <i>структур</i>.</p>]
					(*
						<- lang_ru;;
						=> nrel_format: format_html;;
					*);;
				*);
				.system_element_3475
				(*
					=> nrel_idtf: [<p>синтаксически правильная структура</p>];;
					=> nrel_idtf: [<p>синтаксически правильно построенная структура</p>]
					(*
						<- lang_ru;;
						=> nrel_format: format_html;;
					*);;
					<= .system_element_126: {
						.system_element_3502;
						.system_element_3503
					};;
					=> nrel_subdividing: {
						.system_element_3504
						(*
							<= .system_element_325: {
								.system_element_3505;
								.system_element_3506
							};;
						*);
						.system_element_3476
						(*
							=> nrel_idtf: [<p>семантически правильно построенный sc-текст</p>];;
							<= .system_element_126: {
								.system_element_3507;
								.system_element_3508
							};;
						*)
					};;
				*)
			};;

			.system_element_572
			=> nrel_idtf: [<p>дискретная информационная конструкция, являющаяся знанием, представленная в некотором (дополнительно уточняемом) языке</p>]
			(*
				<- lang_ru;;
				=> nrel_format: format_html;;
			*);
			<= .system_element_95: .system_element_3452;
			<= nrel_inclusion: .system_element_1574;
			=> nrel_note: [<p>Каждое знание является знаковой конструкцией, но не каждая знаковая конструкция является знанием, а только та, смысловое представление которой удовлетворяет определенным требованиям корректности и целостности.</p>]
			(*
				<- lang_ru;;
				=> nrel_format: format_html;;
			*);
			<- .system_element_3509;;

			.system_element_437
			-> {
				...
				(*
					<=> .system_element_319: {
						.system_element_803;
						.system_element_569;
						.system_element_572
					};;
					<- .system_element_437;;
				*);
				...
				(*
					<=> .system_element_319: {
						.system_element_2807;
						.system_element_3140;
						.system_element_572
					};;
					<- .system_element_437;;
				*)
			};;
		*];;
	*];;

	.system_element_3265
	<=> .system_element_319: {
		[<p>В предыдущем сегменте "<i>SC-код как синтаксическое расширение Ядра SC-кода</i>" рассмотрен <i>Синтаксис SC-кода</i> путём:
		<ul>
			<li> введения <i>синтаксически выделяемых классов sc-элементов</i> в рамках <i>SC-кода</i>;
			<li> описания <i>теоретико-множественных связей</i> между указанными классами <i>sc-элементов</i> (к такому описанию, в частности, относится <i>Синтаксическая классификация sc-элементов в рамках SC-кода</i>);
			<li> введения двух отношений инцидентности <i>sc-элементов</i> --- <i>Отношения инцидентности sc-коннекторов*</i> и <i>Отношения инцидентности входящих sc-дуг*</i>;
			<li> описания <i>Синтаксических правил SC-кода</i>, которые, прежде всего, описывают формальные свойства указанных выше отношений инцидентности <i>sc-элементов</i>.</li>
		<ul>Однако для того, чтобы получить возможность <u>все</u> (!) <i>Синтаксические правила SC-кода</i> записать средствами самого <i>SC-кода</i>, необходимо иметь <u>явное</u> представление <i>пар</i> отношений инцидентности <i>sc-элементов</i> в виде <i>sc-дуг</i>, принадлежащим этим отношениям. В случае, если указанные <i>sc-дуги</i> инцидентности являются <i>sc-переменными</i>, логико-семантических проблем не возникнет. И этого, кстати, вполне достаточно, чтобы <i>Синтаксические правила SC-кода</i>, сформулированные в виде <i>логических высказываний</i>, записать средствами <i>SC-кода</i>. Но, если разрешить <i>sc-дугам</i> инцидентности быть <i>sc-константами</i>, то, во-первых, в <i>Синтаксические правила SC-кода</i> необходимо добавить Правило удаления <i>константной sc-дуги инцидентности</i>, если эта инцидентность представлена неявно, а, во-вторых, в <i>Правила синтаксической трансформации sc-элементов</i> необходимо добавить Правило трансформации (замены) <i>константной sc-дуги инцидентности</i> на неявное представление этой инцидентности.В теоретическом и, возможно, даже в практическом плане может быть интересна такая синтаксическая модификация (синтаксическое расширение) <i>SC-кода</i>, в котором: 
		<ul>
			<li> <u>все</u> неявно представленные <i>пары инцидентности sc-элементов</i> заменяются на <i>константные sc-дуги инцидентности</i> --- неявно представленными <i>парами инцидентности</i> остаются <u>только</u> <i>пары инцидентности</i> константных <i>sc-дуг</i> инцидентности с компонентами этих <i>sc-дуг</i>;
			<li> В <i>Алфавит SC-кода</i> вводятся два новых <i>синтаксически выделяемых класса sc-элементов</i> --- <i>класс sc-дуг инцидентности sc-коннекторов</i>, а также <i>класс sc-дуг инцидентности входящих sc-дуг</i>.</li>
		<ul>В результате такого преобразования конструкций <i>SC-кода</i> конструкции <i>SC-кода</i> перестают быть графовыми конструкциями нетрадиционного вида, в которых рёбра, гиперрёбра, дуги могут быть инцидентны другим рёбрам, гиперребрам и дугам, а становятся классическими графами с двумя типами дуг (с <i>sc-дугами инцидентности sc-коннекторов</i> и с <i>sc-дугами инцидентности входящих sc-дуг</i>) и с пятью типами вершин (с вершинами, представляющими <i>sc-узлы общего вида</i>, с вершинами, представляющими <i>sc-узлы</i>, являющиеся знаками <i>внутренних файлов ostis-системы</i>, с вершинами, представляющими <i>sc-рёбра общего вида</i>, с вершинами, представляющими <i>sc-дуги общего вида</i>, с вершинами, представляющими <i>базовые sc-дуги</i>).Рассмотренное преобразование конструкций <i>SC-кода</i> в теории графов называется поздразделением или подразбиением графа (Смотрите Trudeau1993).</p>]
		(*
			<- lang_ru;;
			=> nrel_format: format_html;;
		*)
	};;
*];;
